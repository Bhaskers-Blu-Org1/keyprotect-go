/*
 * IBM Key Protect API
 *
 * IBM Key Protect helps you provision encrypted keys for apps across IBM Cloud. As you manage the lifecycle of your keys, you can benefit from knowing that your keys are secured by cloud-based FIPS 140-2 Level 3 hardware security modules (HSMs) that protect against theft of information. You can use the Key Protect API to store, generate, and retrieve your key material. Keys within the service can protect any type of data in your symmetric key based encryption solution.
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package keyprotect
import (
	"os"
)
// SecureImport Additional properties that are associated with importing a key with an import token.
type SecureImport struct {
	// The encrypted nonce value that protects a key import request against replay attacks. This value must be encrypted by using the encrypted `payload` value that represents the key that you want to import into the service.    To retrieve a nonce value, use `GET /import_token`. Then, encrypt the value by using an AES-GCM encryption  method that is compatible with your environment. 
	EncryptedNonce *os.File `json:"encryptedNonce"`
	// The RSA encryption algorithm that is used to encrypt the key material that you want to import into the  service. Currently, `RSAES_OAEP_SHA_256` is supported.
	EncryptionAlgorithm string `json:"encryptionAlgorithm"`
	// The initialization vector (IV) that is generated by the AES-GCM algorithm when you encrypt a nonce. The IV  value is required to decrypt the encrypted nonce value that you provide when you make a key import request  to the service.    To generate an IV, encrypt the `nonce` value by using an AES-GCM encryption method that is compatible with your environment. Then, supply the generated IV value when you import a key to the service.
	Iv *os.File `json:"iv"`
	// The encrypted key material that you want to store and manage in the service. The value must be base64 encoded.    First, retrieve the public key that is associated with your service instance by calling `GET /import_token`.  Then, use the public key to run RSA encryption on the key material that you want to import to the service.
	Payload *os.File `json:"payload"`
}
