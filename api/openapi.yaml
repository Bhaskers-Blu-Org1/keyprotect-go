openapi: 3.0.1
info:
  contact:
    name: IBM Key Protect
    url: https://cloud.ibm.com/docs/services/key-protect/
  description: IBM Key Protect helps you provision encrypted keys for apps across
    IBM Cloud. As you manage the lifecycle of your keys, you can benefit from knowing
    that your keys are secured by cloud-based FIPS 140-2 Level 3 hardware security
    modules (HSMs) that protect against theft of information. You can use the Key
    Protect API to store, generate, and retrieve your key material. Keys within the
    service can protect any type of data in your symmetric key based encryption solution.
  license:
    name: IBM-License
    url: http://ibm.com/LICENSE-IBM
  title: IBM Key Protect API
  version: 2.0.0
  x-ibm-name: key-protect
  x-try-it-out-enabled:
    corsPolicy: true
    credentials: false
    defaultApiEndpoint: https://us-south.kms.cloud.ibm.com
    enabled: false
servers:
- url: https://%7Bregion%7D.kms.cloud.ibm.com
paths:
  /api/v2/import_token:
    get:
      description: "Retrieves the import token that is associated with your service\
        \ instance.\n  \nWhen you call `GET /import_token`, Key Protect returns the\
        \ public key that you can use to encrypt and import key material to the service,\
        \ along with details about the key. \n  \n**Note:** After you reach the `maxAllowedRetrievals`\
        \ or `expirationDate` for the import token, the import token and its associated\
        \ public key can no longer be used for key operations. To create a new import\
        \ token, use  `POST /import_token`."
      operationId: getImportToken
      parameters:
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      responses:
        200:
          content:
            application/vnd.ibm.kms.import_token+json:
              example:
                creationDate: YYYY-MM-DDTHH:MM:SSZ
                expirationDate: YYYY-MM-DDTHH:MM:SSZ
                maxAllowedRetrievals: 10
                nonce: '...'
                payload: '...'
                remainingRetrievals: 9
              schema:
                $ref: '#/components/schemas/GetImportToken'
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportToken'
          description: The import token was successfully retrieved.
        401:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        404:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Not found: An import token was not found in the specified
                  service instance. To  create an import token, use `POST /import_token`'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: An import token was not found in the specified service instance.
            To create an import token, use  `POST /import_token`
        409:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Conflict: The import token has reached its `maxAllowedRetrievals`
                  or `expirationDate`. To  create a new import token, use `POST /import_token`. '
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "The import token has reached its `maxAllowedRetrievals` or\
            \ `expirationDate`, and it is no longer available for use. To create a\
            \ new import token, use `POST /import_token`.\n  \nIn very rare cases,\
            \ the import token may expire before its expiration time. Ensure that\
            \ your client application is configured with a retry mechanism for catching\
            \ and responding to `409` conflict exceptions.  "
        429:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Retrieve an import token
      tags:
      - Import tokens
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl GET \
                  https://<region>.kms.cloud.ibm.com/api/v2/import_token \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'content-type: application/vnd.ibm.kms.import_token+json'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/import_token",
                  "method": "GET",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>",
                    "content-type": "application/vnd.ibm.kms.import_token+json"
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - |-
                import requests

                url = "https://<region>.kms.cloud.ibm.com/api/v2/import_token"

                headers = {
                  "authorization": "Bearer <IAM_token>",
                  "bluemix-instance": "<instance_ID>",
                  "content-type": "application/vnd.ibm.kms.import_token+json"
                }

                response = requests.request("GET", url, headers=headers)

                print(response.text)
              type: code
            name: Example request
      x-try-it-out-example:
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
    post:
      description: "Creates an import token that you can use to encrypt and import\
        \ root keys into the service.  [Learn more](/docs/services/key-protect?topic=key-protect-importing-keys#using-import-tokens)\n\
        \   \nWhen you call `POST /import_token`, Key Protect creates an RSA key-pair\
        \ from its HSMs. The service encrypts and  stores the private key in the HSM,\
        \ and returns the corresponding public key when you call `GET /import_token`.\
        \  You can create only one import token per service instance. "
      operationId: postImportToken
      parameters:
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportToken'
        description: The base request to create an import token.
        required: true
      responses:
        200:
          content:
            application/vnd.ibm.kms.import_token+json:
              example:
                creationDate: YYYY-MM-DDTHH:MM:SSZ
                expirationDate: YYYY-MM-DDTHH:MM:SSZ
                maxAllowedRetrievals: 10
                remainingRetrievals: 10
              schema:
                $ref: '#/components/schemas/ImportToken'
          description: The import token was successfully created.
        401:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        429:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/vnd.ibm.kms.import_token+json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Create an import token
      tags:
      - Import tokens
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - "curl -X POST \\\n  https://<region>.kms.cloud.ibm.com/api/v2/import_token\
                \ \\\n  -H 'accept: application/vnd.ibm.collection+json' \\\n  -H\
                \ 'authorization: Bearer <IAM_token>' \\\n  -H 'bluemix-instance:\
                \ <instance_ID>' \\\n  -H 'content-type: application/json' \\\n  -d\
                \ '{ \n    \"expiration\": <expiration_time>, \\\n    \"maxAllowedRetrievals\"\
                : <use_count> \n  }'"
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/import_token",
                  "method": "POST",
                  "headers": {
                    "accept": "application/vnd.ibm.collection+json",
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>",
                    "content-type": "application/json"
                  },
                  "processData": false,
                  "data": {
                    "expiration": <expiration_time>,
                    "maxAllowedRetrievals": <use_count>
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - "import requests\n\nurl = \"https://<region>.kms.cloud.ibm.com/api/v2/import_token\"\
                \n\npayload = {\n  \"expiration\": <expiration_time>,\n  \"maxAllowedRetrievals\"\
                : <use_count>\n  }\n  \nheaders = {\n  \"accept\": \"application/vnd.ibm.collection+json\"\
                ,\n  \"authorization\": \"Bearer <IAM_token>\",\n  \"bluemix-instance\"\
                : \"<instance_ID>\",\n  \"content-type\": \"application/json\"\n \
                \ }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\
                \nprint(response.text)"
              type: code
            name: Example request
      x-try-it-out-example:
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
      x-codegen-request-body-name: body
  /api/v2/keys:
    get:
      description: "Retrieves a list of keys that are stored in your Key Protect service\
        \ instance.\n  \n**Note:** `GET /keys` will not return the key material in\
        \ the response body. You can retrieve the key material for a standard key\
        \ with a subsequent `GET /keys/{id}` request."
      operationId: getKeys
      parameters:
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      - description: "The number of keys to retrieve. By default, `GET /keys` returns\
          \ the first 200 keys. To retrieve a different set of keys, use `limit` with\
          \ `offset` to page through your available resources. The maximum value for\
          \ `limit` is 5000.\n  \n**Usage:** If you have 20 keys in your instance,\
          \ and you want to retrieve only the first 5 keys, use  `../keys?limit=5`."
        in: query
        name: limit
        schema:
          default: 200
          maximum: 5000
          minimum: 1
          type: integer
      - description: "The number of keys to skip. By specifying `offset`, you retrieve\
          \ a subset of keys that starts with the `offset` value. Use `offset` with\
          \ `limit` to page through your available resources.\n  \n**Usage:** If you\
          \ have 100 keys in your instance, and you want to retrieve keys 26 through\
          \ 50, use  `../keys?offset=25&limit=25`.    "
        in: query
        name: offset
        schema:
          default: 0
          minimum: 0
          type: integer
      responses:
        200:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 2
                  collectionType: application/vnd.ibm.kms.key+json
                resources:
                - createdBy: '...'
                  creationDate: YYYY-MM-DDTHH:MM:SSZ
                  crn: '...'
                  description: '...'
                  extractable: false
                  id: '...'
                  name: Root-key
                  state: 1
                  type: application/vnd.ibm.kms.key+json
                - createdBy: '...'
                  creationDate: YYYY-MM-DDTHH:MM:SSZ
                  crn: '...'
                  description: '...'
                  extractable: true
                  id: '...'
                  name: Standard-key
                  state: 1
                  type: application/vnd.ibm.kms.key+json
              schema:
                $ref: '#/components/schemas/ListKeys'
          description: The list of keys was successfully retrieved.
          headers:
            Key-Total:
              description: The number of keys in your service instance.
              schema:
                type: integer
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Retrieve a list of keys
      tags:
      - Keys
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl GET \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'accept: application/vnd.ibm.kms.key+json'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys",
                  "method": "GET",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>"
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - |-
                import requests

                url = "https://<region>.kms.cloud.ibm.com/api/v2/keys"

                headers = {
                  "authorization": "Bearer <IAM_token>",
                  "bluemix-instance": "<instance_ID>",
                  "accept": "application"vnd.ibm.kms.key+json",
                }

                response = requests.request('GET', url, headers=headers)

                print(response.text)
              type: code
            name: Example request
      x-try-it-out-example:
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
    head:
      description: Returns the same HTTP headers as a GET request without returning
        the entity-body. This operation returns the number of keys in your instance
        in a header called `Key-Total`.
      operationId: getKeyCollectionMetadata
      parameters:
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      responses:
        200:
          content: {}
          description: The metadata was successfully retrieved.
          headers:
            Key-Total:
              description: The number of keys in your service instance.
              schema:
                type: integer
        401:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        429:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Retrieve the number of keys
      tags:
      - Keys
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl -I HEAD \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'accept: application/vnd.ibm.kms.key+json'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys",
                  "method": "HEAD",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>"
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - |-
                import requests

                url = "https://<region>.kms.cloud.ibm.com/api/v2/keys"

                headers = {
                  "authorization": "Bearer <IAM_token>",
                  "bluemix-instance": "<instance_ID>",
                  "accept": "application/vnd.ibm.kms.key+json",
                }

                response = requests.request('HEAD', url, headers=headers)

                print(response.text)
              type: code
            name: Example request
      x-try-it-out-example:
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
    post:
      description: "Creates a new key with specified key material. \n   \nKey Protect\
        \ designates the resource as either a root key or a standard key based on\
        \ the `extractable` value that you specify. A successful `POST /keys` operation\
        \ adds the key to the service and  returns the details of the request in the\
        \ response entity-body, if the Prefer header is set to  `return=representation`."
      operationId: createKey
      parameters:
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      - description: "Alters server behavior for POST or DELETE operations. A header\
          \ with `return=minimal` causes the service to  return only the key identifier,\
          \ or metadata. A header containing `return=representation` returns both\
          \ the key  material and metadata in the response entity-body. If the key\
          \ has been designated as a root key, the  system cannot return the key material.\
          \  \n  \n**Note:** During POST operations, Key Protect may not immediately\
          \ return the key material due to key generation time. To retrieve the key\
          \ material, you can perform a subsequent `GET /keys/{id}` request."
        in: header
        name: Prefer
        schema:
          enum:
          - return=representation
          - return=minimal
          type: string
      requestBody:
        content:
          application/vnd.ibm.kms.key+json:
            schema:
              type: object
        description: The base request for creating a new key.
        required: true
      responses:
        201:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.key+json
                resources:
                - crn: '...'
                  description: '...'
                  extractable: false
                  name: Root-key
                  state: 1
                  type: application/vnd.ibm.kms.key+json
              schema:
                type: object
          description: The key was successfully created.
        400:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Bad Request: The key is missing a required field.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key is missing a required field.
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        409:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Conflict: The import token that was used to encrypt
                  this key has reached its  `maxAllowedRetrievals` or `expirationDate`,
                  and it is no longer available for key operations. To  create a new
                  import token, use `POST /import_token`. '
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "The import token that was used to encrypt this key has reached\
            \ its `maxAllowedRetrievals` or `expirationDate`,  and it is no longer\
            \ available for operations. To create a new import token, use `POST /import_token`.\n\
            \  \nIn very rare cases, the import token may expire before its expiration\
            \ time. Ensure that your client application is configured with a retry\
            \ mechanism for catching and responding to `409` conflict exceptions.\
            \  "
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Create a new key
      tags:
      - Keys
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl -X POST \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'content-type: application/vnd.ibm.kms.key+json' \
                  -d '{
                    "metadata": {
                      "collectionType": "application/vnd.ibm.kms.key+json",
                      "collectionTotal": 1
                    },
                    "resources": [
                    {
                      "type": "application/vnd.ibm.kms.key+json",
                      "name": "Root-key",
                      "description": "...",
                      "extractable": false
                      }
                    ]
                  }'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys",
                  "method": "POST",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>",
                    "prefer": "return=representation",
                    "content-type": "application/vnd.ibm.kms.key+json"
                  },
                  "processData": false,
                  "data": {
                    "metadata": {
                      "collectionType": "application/vnd.ibm.kms.key+json",
                      "collectionTotal": 1
                    },
                    "resources": [
                      {
                      "type": "application/vnd.ibm.kms.key+json",
                      "name": "Root-key",
                      "description": "...",
                      "extractable": false
                      }
                    ]
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - "import requests\n\nurl = \"https://<region>.kms.cloud.ibm.com/api/v2/keys\"\
                \n\npayload = {\n  \"metadata\": {\n    \"collectionType\": \"application/vnd.ibm.kms.key+json\"\
                ,\n    \"collectionTotal\": 1\n  },\n  \"resources\": [\n    {\n \
                \   \"type\": \"application/vnd.ibm.kms.key+json\",\n    \"name\"\
                : \"Root-key\",\n    \"description\": \"...\",\n    \"extractable\"\
                : false\n    }\n  ]\n}\n  \nheaders = {\n  \"authorization\": \"Bearer\
                \ <IAM_token>\",\n  \"bluemix-instance\": \"<instance_ID>\",\n  \"\
                prefer\": \"return=representation\",\n  \"content-type\": \"application/vnd.ibm.kms.key_action+json\"\
                \n}\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\
                \nprint(response.text)"
              type: code
            name: Example request
      x-try-it-out-example:
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
      - in: body
        name: body
        value:
        - |-
          {
            "metadata": {
              "collectionType": "application/vnd.ibm.kms.key+json",
              "collectionTotal": 1
            },
            "resources": [
            {
              "type": "application/vnd.ibm.kms.key+json",
              "name": "Root-key",
              "description": "Test key",
              "extractable": false
              }
            ]
          }
      x-codegen-request-body-name: body
  /api/v2/keys/{id}:
    delete:
      description: "Deletes a key by specifying the ID of the key.\n  \n**Important:**\
        \ When you delete a key, you permanently shred its contents and associated\
        \ data. The action cannot be reversed."
      operationId: deleteKey
      parameters:
      - description: The v4 UUID that uniquely identifies the key.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      - description: "Alters server behavior for POST or DELETE operations. A header\
          \ with `return=minimal` causes the service to  return only the key identifier,\
          \ or metadata. A header containing `return=representation` returns both\
          \ the key  material and metadata in the response entity-body. If the key\
          \ has been designated as a root key, the  system cannot return the key material.\
          \  \n  \n**Note:** During POST operations, Key Protect may not immediately\
          \ return the key material due to key generation time. To retrieve the key\
          \ material, you can perform a subsequent `GET /keys/{id}` request."
        in: header
        name: Prefer
        schema:
          enum:
          - return=representation
          - return=minimal
          type: string
      responses:
        200:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.key+json
                resources:
                - crn: '...'
                  deleted: true
                  deletedBy: '...'
                  deletionDate: YYYY-MM-DDTHH:MM:SSZ
                  description: '...'
                  extractable: false
                  name: Root-key
                  state: 5
                  type: application/vnd.ibm.kms.key+json
              schema:
                $ref: '#/components/schemas/DeleteKey'
          description: The key was successfully deleted.
        204:
          content: {}
          description: The key was deleted.
        400:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Bad Request: The key cannot be deleted due to a malformed,
                    invalid, or missing ID.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key cannot be deleted due to a malformed, invalid, or missing
            ID.
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        404:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Not Found: They key could not be found.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key could not be found.
        410:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Gone: The requested key was previously deleted and
                  is no longer available. Please delete  references to this key.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The requested key was previously deleted and is no longer available.
            Please delete references to this key.
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Delete a key by ID
      tags:
      - Keys
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl -X DELETE \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID> \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'accept: application/vnd.ibm.kms.key+json'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>",
                  "method": "DELETE",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>"
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - |-
                import requests

                url = "https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>"

                headers = {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>",
                    "accept": "application/vnd.ibm.kms.key+json",
                }

                response = requests.request("DELETE", url, headers=headers)

                print(response.text)
              type: code
            name: Example request
      x-try-it-out-example:
      - in: path
        name: id
        value: ""
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
    get:
      description: Retrieves the details of a key by specifying the ID of the key.
      operationId: getKey
      parameters:
      - description: The v4 UUID that uniquely identifies the key.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.key+json
                resources:
                - createdBy: '...'
                  creationDate: YYYY-MM-DDTHH:MM:SSZ
                  crn: '...'
                  description: '...'
                  extractable: true
                  id: '...'
                  name: Standard-key
                  payload: '...'
                  state: 1
                  type: application/vnd.ibm.kms.key+json
              schema:
                $ref: '#/components/schemas/GetKey'
          description: The key was successfully retrieved.
        400:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Bad Request: The key could not be retrieved due to a
                    malformed, invalid, or missing ID.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key could not be retrieved due to a malformed, invalid,
            or missing ID.
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        404:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Not Found: The key could not be found. Verify that the
                    key ID specified is valid.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key could not be found. Verify that the key ID specified
            is valid.
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Retrieve a key by ID
      tags:
      - Keys
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl GET \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID> \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'accept: application/vnd.ibm.kms.key+json'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>",
                  "method": "GET",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>"
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - |-
                import requests

                url = 'https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>'

                headers = {
                    'authorization': 'Bearer <IAM_token>',
                    'bluemix-instance': '<instance_ID>',
                    'accept': 'application/vnd.ibm.kms.key+json',
                }

                response = requests.request('GET', url, headers=headers)

                print(response.text)
              type: code
            name: Example request
      x-try-it-out-example:
      - in: path
        name: id
        value: ""
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
    post:
      description: "Invokes an action, such as a `wrap`, `unwrap`, or `rotate` operation,\
        \ on a specified root key. \n    \n**Note:** When you unwrap a wrapped data\
        \ encryption key (WDEK) by using a rotated root key, the service returns a\
        \ new ciphertext in the response entity-body. Each ciphertext remains available\
        \ for `unwrap` actions. If you unwrap a DEK with a previous ciphertext, the\
        \ service also returns the latest ciphertext in the response. Use the latest\
        \  ciphertext for future unwrap operations."
      operationId: actionOnKey
      parameters:
      - description: The root key that is used as the wrapping key. It must be a v4
          UUID for an active key.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The action to perform on the specified key.
        in: query
        name: action
        required: true
        schema:
          enum:
          - wrap
          - unwrap
          - rotate
          - rewrap
          type: string
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      - description: "Alters server behavior for POST or DELETE operations. A header\
          \ with `return=minimal` causes the service to  return only the key identifier,\
          \ or metadata. A header containing `return=representation` returns both\
          \ the key  material and metadata in the response entity-body. If the key\
          \ has been designated as a root key, the  system cannot return the key material.\
          \  \n  \n**Note:** During POST operations, Key Protect may not immediately\
          \ return the key material due to key generation time. To retrieve the key\
          \ material, you can perform a subsequent `GET /keys/{id}` request."
        in: header
        name: Prefer
        schema:
          enum:
          - return=representation
          - return=minimal
          type: string
      requestBody:
        content:
          application/vnd.ibm.kms.key_action+json:
            schema:
              type: object
        description: The base request for key actions.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: Successful key operation.
        204:
          content: {}
          description: Successful key operation. Your key was successfully rotated.
        400:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Bad Request: Your authentication data or key is invalid,
                  or the entity-body is missing a  required field.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your authentication data or key is invalid, or the entity-body
            is missing a required field.
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        404:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Not Found: They key could not be found.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key could not be found.
        409:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Conflict: The key is not in an active state, so any
                  KeyAction will fail. Check the key''s nonactiveStateReason to understand
                  how to proceed.'' '
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key is not in an active state, so any KeyAction will fail.
            Check the key's `nonactiveStateReason` to understand how to proceed.
        410:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Gone: The requested key was previously deleted and
                  is no longer available. Please delete  references to this key.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The requested key was previously deleted and is no longer available.
            Please delete references to this key.
        422:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unprocessable Entity: The ciphertext provided for the
                  unwrap operation was not wrapped by  this key.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The ciphertext provided for the unwrap operation was not wrapped
            by this key.
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Invoke an action on a key
      tags:
      - Keys
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - "curl -X POST \\\n  https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>?action=wrap\
                \ \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'bluemix-instance:\
                \ <instance_ID>' \\\n  -H 'accept: application/vnd.ibm.kms.key_action+json'\
                \ \\\n  -H 'content-type: application/vnd.ibm.kms.key_action+json'\
                \ \\\n  -d '{ \n    \"plaintext\": \"<data_key>\", \n    \"aad\":\
                \ [\"<additional_data>\", \"<additional_data>\"] \n  }'"
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>?action=wrap",
                  "method": "POST",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>",
                    "prefer": "return=representation",
                    "accept": "application/vnd.ibm.kms.key_action+json",
                    "content-type": "application/vnd.ibm.kms.key_action+json"
                  },
                  "processData": false,
                  "data": {
                    "plaintext": "<data_key>",
                    "aad": [
                      <additional_data>, <additional_data>
                      ]
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - "import requests\n\nurl = \"https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>\"\
                \n\nquerystring = {\n  \"action\": \"wrap\"\n  }\n\npayload = {\n\
                \  \"plaintext\": \"string\",\n  \"aad\": [\n    <additional_data>,\
                \ <additional_data>\n    ]\n  }\n  \nheaders = {\n    \"authorization\"\
                : \"Bearer <IAM_token>\",\n    \"bluemix-instance\": \"<instance_ID>\"\
                ,\n    \"prefer\": \"return=representation\",\n    \"accept\": \"\
                application/vnd.ibm.kms.key_action+json\",\n    \"content-type\":\
                \ \"application/vnd.ibm.kms.key_action+json\"\n    }\n\nresponse =\
                \ requests.request(\"POST\", url, data=payload, headers=headers, params=querystring)\n\
                \nprint(response.text)"
              type: code
            name: Example request
      x-try-it-out-example:
      - in: path
        name: id
        value: ""
      - in: query
        name: action
        value: wrap
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
      - in: body
        name: body
        value:
        - "{ \n  \"plaintext\": \"tF9ss0W9HQUVkddcjSeGg/MqZFs2CVh/FFKLPLLnOwY=\",\
          \ \n  \"aad\": [\"data1\", \"data2\"] \n}"
      x-codegen-request-body-name: body
  /api/v2/keys/{id}/policies:
    get:
      description: Retrieves a list of policies that are associated with a specified
        key.
      operationId: getPolicy
      parameters:
      - description: The v4 UUID that uniquely identifies the key.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.policy+json
                resources:
                - createdBy: '...'
                  creationDate: '...'
                  crn: '...'
                  id: application/vnd.ibm.kms.key+json
                  lastUpdateDate: '...'
                  rotation:
                    interval_month: 3
                  updatedBy: '...'
              schema:
                $ref: '#/components/schemas/CreatePolicy'
          description: The policies resource was successfuly retrieved
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The request is missing a required field or contains invalid
            values.
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        404:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Not Found: They key could not be found.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The key could not be found.
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Retrieve a list of policies
      tags:
      - Policies
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl GET \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>/policies \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'accept: application/vnd.ibm.kms.policy+json'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>/policies",
                  "method": "GET",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>"
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - |-
                import requests

                url = 'https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>/policies'

                headers = {
                    'authorization': 'Bearer <IAM_token>',
                    'bluemix-instance': '<instance_ID>',
                    'accept': 'application/vnd.ibm.kms.policy+json',
                }

                response = requests.request('GET', url, headers=headers)

                print(response.text)
              type: code
            name: Example request
      x-try-it-out-example:
      - in: path
        name: id
        value: ""
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
    put:
      description: Replaces the policy that is associated with a specified key
      operationId: putPolicy
      parameters:
      - description: The v4 UUID that uniquely identifies the key.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The IBM Cloud instance ID that identifies your Key Protect service
          instance.
        in: header
        name: Bluemix-Instance
        required: true
        schema:
          type: string
      - description: The v4 UUID used to correlate and track transactions.
        in: header
        name: Correlation-Id
        schema:
          type: string
      requestBody:
        content:
          application/vnd.ibm.kms.key+json:
            schema:
              $ref: '#/components/schemas/CreatePolicy'
        description: The base request for creating a new policies resource.
        required: true
      responses:
        200:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.policy+json
                resources:
                - createdBy: '...'
                  creationDate: '...'
                  crn: '...'
                  id: '...'
                  lastUpdateDate: '...'
                  rotation:
                    interval_month: 3
                  updatedBy: '...'
              schema:
                $ref: '#/components/schemas/CreatePolicy'
          description: The policy was successfully replaced.
        204:
          content: {}
          description: The policy was updated.
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The policy cannot be deleted due to a malformed, invalid, or
            missing ID.
        401:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not
                  have the necessary permissions to make this request. Verify that
                  the given IBM Cloud access token and instance ID are correct. If
                  the error  persists, contact the account owner to check your permissions.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your credentials are invalid or do not have the necessary permissions
            to make this request. Verify that the  given IBM Cloud access token and
            instance ID are correct. If the error persists, contact the account owner
            to check your permissions.
        403:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized
                    to access this resource.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Your IBM Cloud access token is not authorized to access this
            resource.
        410:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Gone: The requested key was previously deleted and
                  is no longer available. Please delete  references to this key.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: The requested key was previously deleted and is no longer available.
            Please delete references to this key.
        429:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - errorMsg: 'Too Many Requests: Please wait a few minutes and try
                    again.'
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: Too many requests. Please wait a few minutes and try again.
        500:
          content:
            application/json:
              example:
                metadata:
                  collectionTotal: 1
                  collectionType: application/vnd.ibm.kms.error+json
                resources:
                - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently
                  unavailable. Your request could not be  processed. Please try again
                  later.'''
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: "IBM Key Protect is currently unavailable. Your request could\
            \ not be processed. Please try again later. \n    \nIf the problem persists,\
            \ note the `correlation-ID` in the response header and contact [IBM Cloud\
            \ support](https://watson.service-now.com/wcp)."
      security:
      - BearerAuth: []
      summary: Replace an existing policy
      tags:
      - Policies
      x-sdk-operations:
        request-examples:
          curl:
          - example:
            - lang: curl
              source:
              - |-
                curl -X PUT \
                  https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>/policies \
                  -H 'authorization: Bearer <IAM_token>' \
                  -H 'bluemix-instance: <instance_ID>' \
                  -H 'content-type: application/vnd.ibm.kms.policy+json' \
                  -d '{
                    "metadata": {
                      "collectionType": "application/vnd.ibm.kms.policy+json",
                      "collectionTotal": 1
                    },
                    "resources": [
                    {
                      "type": "application/vnd.ibm.kms.policy+json",
                      "rotation": {
                        "interval_month": <rotation_interval>
                        }
                      }
                    ]
                  }'
              type: code
            name: Example request
          javascript:
          - example:
            - lang: javascript
              source:
              - |-
                var settings = {
                  "async": true,
                  "crossDomain": true,
                  "url": "https://<region>.kms.cloud.ibm.com/api/v2/keys/<key_ID>/policies",
                  "method": "PUT",
                  "headers": {
                    "authorization": "Bearer <IAM_token>",
                    "bluemix-instance": "<instance_ID>",
                    "content-type": "application/vnd.ibm.kms.policy+json"
                  },
                  "processData": false,
                  "data": {
                    "metadata": {
                      "collectionType": "application/vnd.ibm.kms.policy+json",
                      "collectionTotal": 1
                    },
                    "resources": [
                      {
                      "type": "application/vnd.ibm.kms.policy+json",
                      "rotation": {
                        "interval_month": <rotation_interval>
                        }
                      }
                    ]
                  }
                }

                $.ajax(settings).done(function (response) {
                  console.log(response);
                });
              type: code
            name: Example request
          python:
          - example:
            - lang: python
              source:
              - "import requests\n\nurl = \"https://<region>.kms.cloud.ibm.com/api/v2/keys\"\
                \n\npayload = {\n  \"metadata\": {\n    \"collectionType\": \"application/vnd.ibm.kms.policy+json\"\
                ,\n    \"collectionTotal\": 1\n  },\n  \"resources\": [\n    {\n \
                \   \"type\": \"application/vnd.ibm.kms.policy+json\",\n    \"rotation\"\
                : {\n      \"interval_month\": <rotation_interval>\n      }\n    }\n\
                \  ]\n}\n  \nheaders = {\n  \"authorization\": \"Bearer <IAM_token>\"\
                ,\n  \"bluemix-instance\": \"<instance_ID>\",\n  \"content-type\"\
                : \"application/vnd.ibm.kms.policy+json\"\n}\n\nresponse = requests.request(\"\
                PUT\", url, data=payload, headers=headers)\n\nprint(response.text)"
              type: code
            name: Example request
      x-try-it-out-example:
      - in: path
        name: id
        value: ""
      - in: header
        name: Authorization
        value: ""
      - in: header
        name: Bluemix-Instance
        value: ""
      - in: body
        name: body
        value:
        - |-
          {
            "metadata": {
              "collectionType": "application/vnd.ibm.kms.policy+json",
              "collectionTotal": 1
            },
            "resources": [
              {
              "type": "application/vnd.ibm.kms.policy+json",
              "rotation": {
                "interval_month": 3
              }
              }
            ]
          }
      x-codegen-request-body-name: body
components:
  schemas:
    CollectionMetadata:
      description: The metadata that describes the resource array.
      example:
        collectionType: application/vnd.ibm.kms.key+json
        collectionTotal: 0
      properties:
        collectionTotal:
          description: The number of elements in the resource array.
          format: int64
          type: integer
        collectionType:
          description: The type of resources in the resource array.
          example: application/vnd.ibm.kms.key+json
          type: string
      required:
      - collectionTotal
      - collectionType
      type: object
    CreateKey:
      description: The base schema for creating keys.
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          items:
            allOf:
            - $ref: '#/definitions/Key'
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    CreatePolicy:
      description: The base schema for creating policies.
      example:
        metadata:
          collectionType: application/vnd.ibm.kms.key+json
          collectionTotal: 0
        resources:
        - '{}'
        - '{}'
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          items:
            allOf:
            - $ref: '#/definitions/Policy'
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    DeleteKey:
      description: The base schema for deleting keys.
      example:
        metadata:
          collectionType: application/vnd.ibm.kms.key+json
          collectionTotal: 0
        resources:
        - '{}'
        - '{}'
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          items:
            allOf:
            - $ref: '#/definitions/KeyMetadata'
            - properties:
                deleted:
                  description: The boolean value that determines whether the key has
                    been deleted.
                  readOnly: true
                  type: boolean
                deletedBy:
                  description: The unique identifier for the resource that deleted
                    the key.
                  readOnly: true
                  type: string
                deletionDate:
                  description: The date the key material was destroyed. The date format
                    follows RFC 3339.
                  format: date-time
                  readOnly: true
                  type: string
              type: object
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    Error:
      properties:
        errorMsg:
          description: The conditions for an error response.
          type: string
      required:
      - errorMsg
      type: object
    ErrorCollection:
      description: The base schema for error responses.
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      required:
      - metadata
      - resources
      type: object
    GetImportToken:
      allOf:
      - $ref: '#/components/schemas/ImportToken'
      - $ref: '#/components/schemas/GetImportToken_allOf'
      description: The base schema for retrieving an import token.
    GetKey:
      description: The base schema for retrieving keys.
      example:
        metadata:
          collectionType: application/vnd.ibm.kms.key+json
          collectionTotal: 0
        resources:
          resources:
          - createdBy: '...'
            creationDate: YYYY-MM-DDTHH:MM:SSZ
            crn: '...'
            description: '...'
            extractable: true
            id: '...'
            name: Standard-key
            payload: '...'
            state: 1
            type: application/vnd.ibm.kms.key+json
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          example:
            resources:
            - createdBy: '...'
              creationDate: YYYY-MM-DDTHH:MM:SSZ
              crn: '...'
              description: '...'
              extractable: true
              id: '...'
              name: Standard-key
              payload: '...'
              state: 1
              type: application/vnd.ibm.kms.key+json
          items:
            allOf:
            - $ref: '#/definitions/Key'
            - $ref: '#/definitions/KeyMetadata'
            - properties:
                payload:
                  description: "The retrieved key material that you can export to\
                    \ external apps or services.    \n      \n**Note:** If the key\
                    \ has been designated as a root key, the system cannot return\
                    \ the key material. "
                  format: binary
                  type: string
              type: object
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    ImportKey:
      description: The base schema for importing keys.
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          items:
            allOf:
            - $ref: '#/definitions/Key'
            - properties:
                payload:
                  description: "The key material that you want to store and manage\
                    \ in the service.   \n  \nTo import a key, provide a base64 encoded\
                    \ payload in the request entity-body. If you're importing  a root\
                    \ key, ensure that the key is 128, 192, or 256 bits in length.\
                    \ \n  \n**Note:**  By default, Key Protect encrypts your key material\
                    \ while it's in transit by using the  Transport Layer Security\
                    \ (TLS) 1.2 protocol. If your workload requires a security mechanism\
                    \ beyond  TLS, you can use an import token to encrypt and import\
                    \ root keys to the service.  [Learn more](/docs/services/key-protect?topic=key-protect-importing-keys#using-import-tokens)"
                  format: binary
                  type: string
              required:
              - payload
              type: object
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    ImportKeyWithImportToken:
      description: The base schema for importing keys with an import token.
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          items:
            allOf:
            - $ref: '#/definitions/Key'
            - $ref: '#/definitions/SecureImport'
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    ImportToken:
      description: Properties that are associated with import tokens.
      example:
        remainingRetrievals: 1.1465812980502945
        maxAllowedRetrievals: 301.7700635352131
        expiration: 7195.130719869309
        creationDate: 2018-04-12T23:20:50.52Z
        expirationDate: 2018-12-01T23:20:50.52Z
      properties:
        creationDate:
          description: The date the import token was created. The date format follows
            RFC 3339.
          example: 2018-04-12T23:20:50.52Z
          format: date-time
          readOnly: true
          type: string
        expiration:
          description: "The time in seconds from the creation of an import token that\
            \ determines how long its associated public key  remains valid.\n   \n\
            The minimum value is `300` seconds (5 minutes), and the maximum value\
            \ is `86400` (24 hours). The default value is `600` (10 minutes)."
          maximum: 8.64E+4
          minimum: 3E+2
          type: number
        expirationDate:
          description: The date the import token expires. The date format follows
            RFC 3339.
          example: 2018-12-01T23:20:50.52Z
          format: date-time
          readOnly: true
          type: string
        maxAllowedRetrievals:
          description: 'The number of times that an import token can be retrieved
            within its expiration time before it is no longer accessible. '
          maximum: 5E+2
          minimum: 1
          type: number
        remainingRetrievals:
          description: 'The number of retrievals that are available for the import
            token before it is no longer accessible.  '
          minimum: 1
          readOnly: true
          type: number
      type: object
    Key:
      description: Properties that describe a key.
      properties:
        tags:
          description: "Up to 30 tags can be created. Tags can be between 2-30 characters,\
            \ including spaces. Special characters not permitted include the angled\
            \ bracket, comma, colon, ampersand, and vertical pipe character (|).\n\
            \  \nTo protect your privacy, do not use personal data, such as your name\
            \ or location, as a tag for your key. "
          items:
            type: string
          type: array
        crn:
          description: The Cloud Resource Name (CRN) that uniquely identifies your
            cloud network resources.
          example: crn:v1:bluemix:public:kms:<region>:a/<accountId>:<instanceId>:key:<keyId>
          readOnly: true
          type: string
        description:
          description: "A text field used to provide a more detailed description of\
            \ the key. The maximum length is 240 characters.\n  \nTo protect your\
            \ privacy, do not use personal data, such as your name or location, as\
            \ a description for your  key."
          maxLength: 240
          minLength: 2
          type: string
        expirationDate:
          description: The date the key material expires. The date format follows
            RFC 3339. You can set an expiration date on any  key on its creation.
            If you create a key without specifying an expiration date, the key does
            not expire.
          example: 2018-12-01T23:20:50.52Z
          format: date-time
          type: string
        extractable:
          default: true
          description: "A boolean value that determines whether the key material can\
            \ leave the service. \n    \nIf set to `false`, Key Protect designates\
            \ the key as a nonextractable root key used for `wrap` and `unwrap` actions.\
            \ If set to `true`, Key Protect designates the key as a standard key that\
            \ you can store in your apps and services. Once set to `false` it cannot\
            \ be changed to `true`."
          type: boolean
        id:
          description: The v4 UUID used to uniquely identify the resource, as specified
            by RFC 4122.
          readOnly: true
          type: string
        imported:
          default: false
          description: "A boolean value that shows whether your key was originally\
            \ imported or generated in Key Protect. The value is set by Key Protect\
            \ based on how the key material is initially added to the service.\n \
            \ \nA value of `true` indicates that you must provide new key material\
            \ when it's time to rotate the key. A value  of `false` indicates that\
            \ Key Protect will generate the new key material on a `rotate` operation,\
            \ as it did in key creation."
          readOnly: true
          type: boolean
        name:
          description: "A unique, human-readable alias to assign to your key.\n  \n\
            To protect your privacy, do not use personal data, such as your name or\
            \ location, as an alias for your key."
          maxLength: 50
          minLength: 2
          pattern: '[a-zA-Z0-9 ]{2,50}'
          type: string
        state:
          description: The key state based on NIST SP 800-57. States are integers
            and correspond to the Pre-activation = 0, Active = 1, Deactivated = 3,
            and Destroyed = 5 values.
          readOnly: true
          type: integer
        type:
          default: application/vnd.ibm.kms.key+json
          description: Specifies the MIME type that represents the key resource. Currently,
            only the default is supported.
          type: string
      required:
      - name
      - type
      type: object
    KeyMetadata:
      description: Additional properties that describe a key.
      properties:
        algorithmMetadata:
          $ref: '#/components/schemas/KeyMetadata_algorithmMetadata'
        algorithmType:
          default: AES
          description: The algorithm type used to generate the key. Currently, AES
            is supported.
          enum:
          - AES
          readOnly: true
          type: string
        createdBy:
          description: The unique identifier for the resource that created the key.
          readOnly: true
          type: string
        creationDate:
          description: The date the key material was created. The date format follows
            RFC 3339.
          example: 2018-04-12T23:20:50.52Z
          format: date-time
          readOnly: true
          type: string
        lastRotateDate:
          description: Updates to show when the key was last rotated. The date format
            follows RFC 3339.
          example: 2018-04-12T23:20:50.52Z
          format: date-time
          readOnly: true
          type: string
        lastUpdateDate:
          description: Updates when any part of the key metadata is modified. The
            date format follows RFC 3339.
          example: 2018-04-12T23:20:50.52Z
          format: date-time
          readOnly: true
          type: string
        nonactiveStateReason:
          description: A code indicating the reason the key is not in the activation
            state.
          readOnly: true
          type: integer
      type: object
    ListKeys:
      description: The base schema for listing keys.
      example:
        metadata:
          collectionType: application/vnd.ibm.kms.key+json
          collectionTotal: 0
        resources:
          resources:
          - createdBy: '...'
            creationDate: YYYY-MM-DDTHH:MM:SSZ
            crn: '...'
            description: '...'
            extractable: false
            id: '...'
            name: Root-key
            state: 1
            type: application/vnd.ibm.kms.key+json
          - createdBy: '...'
            creationDate: YYYY-MM-DDTHH:MM:SSZ
            crn: '...'
            description: '...'
            extractable: true
            id: '...'
            name: Standard-key
            state: 1
            type: application/vnd.ibm.kms.key+json
      properties:
        metadata:
          $ref: '#/components/schemas/CollectionMetadata'
        resources:
          description: An array of resources.
          example:
            resources:
            - createdBy: '...'
              creationDate: YYYY-MM-DDTHH:MM:SSZ
              crn: '...'
              description: '...'
              extractable: false
              id: '...'
              name: Root-key
              state: 1
              type: application/vnd.ibm.kms.key+json
            - createdBy: '...'
              creationDate: YYYY-MM-DDTHH:MM:SSZ
              crn: '...'
              description: '...'
              extractable: true
              id: '...'
              name: Standard-key
              state: 1
              type: application/vnd.ibm.kms.key+json
          items:
            allOf:
            - $ref: '#/definitions/Key'
            - $ref: '#/definitions/KeyMetadata'
            type: object
          type: array
      required:
      - metadata
      - resources
      type: object
    Policy:
      description: Properties that are associated with policies.
      properties:
        createdBy:
          description: The unique identifier for the resource that created the policy.
          readOnly: true
          type: string
        creationDate:
          description: The date the policy was created. The date format follows RFC
            3339.
          format: date-time
          readOnly: true
          type: string
        crn:
          description: The Cloud Resource Name (CRN) that uniquely identifies your
            cloud network resources.
          example: crn:v1:bluemix:public:kms:<region>:a/<accountId>:<instanceId>:key:<keyId>:policies
          readOnly: true
          type: string
        lastUpdateDate:
          description: Updates when the policy is replaced or modified. The date format
            follows RFC 3339.
          format: date-time
          readOnly: true
          type: string
        rotation:
          $ref: '#/components/schemas/Policy_rotation'
        type:
          default: application/vnd.ibm.kms.key+json
          description: Specifies the MIME type that represents the policy resource.
            Currently, only the default is supported.
          example: application/vnd.ibm.kms.key+json
          type: string
        updatedBy:
          description: The unique identifier for the resource that updated the policy.
          readOnly: true
          type: string
      required:
      - rotation
      - type
      type: object
    RotateKey:
      description: Properties that are associated with wrap actions.
      properties:
        payload:
          description: "The key material that you want to import into the service\
            \ for rotating an existing root key. This value is  required for a `rotate`\
            \ action if you initially imported the key material when you created the\
            \ key.\n   \nTo rotate an imported root key, provide a base64 encoded\
            \ payload in the request entity-body. To rotate a root key that was initially\
            \ generated by Key Protect, omit the `payload` property and pass in an\
            \ empty request entity-body."
          type: string
      type: object
    SecureImport:
      description: Additional properties that are associated with importing a key
        with an import token.
      properties:
        encryptedNonce:
          description: "The encrypted nonce value that protects a key import request\
            \ against replay attacks. This value must be encrypted by using the encrypted\
            \ `payload` value that represents the key that you want to import into\
            \ the service.\n  \nTo retrieve a nonce value, use `GET /import_token`.\
            \ Then, encrypt the value by using an AES-GCM encryption  method that\
            \ is compatible with your environment. "
          format: binary
          type: string
        encryptionAlgorithm:
          description: The RSA encryption algorithm that is used to encrypt the key
            material that you want to import into the  service. Currently, `RSAES_OAEP_SHA_256`
            is supported.
          example: RSAES_OAEP_SHA_256
          type: string
        iv:
          description: "The initialization vector (IV) that is generated by the AES-GCM\
            \ algorithm when you encrypt a nonce. The IV  value is required to decrypt\
            \ the encrypted nonce value that you provide when you make a key import\
            \ request  to the service.\n  \nTo generate an IV, encrypt the `nonce`\
            \ value by using an AES-GCM encryption method that is compatible with\
            \ your environment. Then, supply the generated IV value when you import\
            \ a key to the service."
          format: binary
          type: string
        payload:
          description: "The encrypted key material that you want to store and manage\
            \ in the service. The value must be base64 encoded.\n  \nFirst, retrieve\
            \ the public key that is associated with your service instance by calling\
            \ `GET /import_token`.  Then, use the public key to run RSA encryption\
            \ on the key material that you want to import to the service."
          format: binary
          type: string
      required:
      - encryptedNonce
      - encryptionAlgorithm
      - iv
      - payload
      type: object
    UnwrapKey:
      description: Properties that are associated with unwrap actions.
      properties:
        aad:
          description: "The additional authentication data (AAD) used to further secure\
            \ the key. \n  \nIf you supply AAD when you make a `wrap` call, you must\
            \ specify the same AAD during a subsequent `unwrap` call. "
          items:
            type: string
          maxItems: 126
          minItems: 0
          type: array
        ciphertext:
          description: "The wrapped data encryption key (DEK) used in wrap actions\
            \ when the query parameter is set to `unwrap`. The system requires a base64\
            \ encoded ciphertext and returns a base64 encoded plaintext in the response\
            \ entity-body when you perform an `unwrap` action on a key.\n     \n**Note:**\
            \ When you unwrap a wrapped data encryption key (WDEK) by using a rotated\
            \ root key, the service returns a new ciphertext in the response entity-body.\
            \ Each ciphertext remains available for `unwrap` actions.  If you unwrap\
            \ a DEK with a previous ciphertext, the service also returns the latest\
            \ ciphertext in the response.  Use the latest ciphertext for future unwrap\
            \ operations."
          type: string
        plaintext:
          description: The original data encryption key (DEK) that was used in wrap
            action. The value is base64 encoded.
          maxLength: 4096
          readOnly: true
          type: string
      required:
      - ciphertext
      type: object
    WrapKey:
      description: Properties that are associated with wrap actions.
      properties:
        aad:
          description: "The additional authentication data (AAD) used to further secure\
            \ the key. \n  \nIf you supply AAD when you make a `wrap` call, you must\
            \ specify the same AAD during a subsequent `unwrap` call. "
          items:
            type: string
          maxItems: 126
          minItems: 0
          type: array
        ciphertext:
          description: The wrapped data encryption key (DEK) that you can export to
            your app or service. The value is base64 encoded.
          readOnly: true
          type: string
        plaintext:
          description: "The data encryption key (DEK) used in wrap actions when the\
            \ query parameter is set to `wrap`. The system returns a base64 encoded\
            \ plaintext in the response entity-body when you perform an `unwrap` action\
            \ on a key.\n   \nTo wrap an existing DEK, provide a base64 encoded plaintext\
            \ during a `wrap` action. To generate a new DEK, omit the `plaintext`\
            \ property. Key Protect generates a random plaintext (32 bytes) that is\
            \ rooted in an HSM and then wraps that value. "
          maxLength: 4096
          type: string
      required:
      - plaintext
      type: object
    GetImportToken_allOf:
      properties:
        nonce:
          description: The nonce value that is used to verify a key import request.
            Encrypt and provide the encrypted nonce value when you use `POST /keys`
            to securely import a key to the service.
          format: binary
          readOnly: true
          type: string
        payload:
          description: "The public encryption key that you can use to encrypt key\
            \ material before you import it into the service. \n  \nThis value is\
            \ a PEM-encoded public key in PKIX format. Because PEM encoding is a binary\
            \ format, the value is base64 encoded."
          format: binary
          readOnly: true
          type: string
    KeyMetadata_algorithmMetadata:
      description: The metadata for the key algorithm.
      properties:
        bitLength:
          default: "256"
          description: The algorithm bit size used for key encryption.
          enum:
          - "256"
          type: string
        mode:
          default: CBC_PAD
          description: The encryption scheme used to generate the key. Currently,
            `CBC_PAD` is supported.
          enum:
          - CBC_PAD
          type: string
    Policy_rotation:
      description: Specifies the key rotation time interval in months, with a minimum
        of 1, and a maximum of 12.
      properties:
        interval_month:
          description: Specifies the key rotation time interval in months
          example: 1
          maximum: 12
          minimum: 1
          type: integer
  securitySchemes:
    BearerAuth:
      description: Your IBM Cloud access token.
      in: header
      name: Authorization
      type: apiKey
x-components:
  parameters:
    CorrelationId:
      description: The v4 UUID used to correlate and track transactions.
      in: header
      name: Correlation-Id
      required: false
      type: string
    InstanceParam:
      description: The IBM Cloud instance ID that identifies your Key Protect service
        instance.
      in: header
      name: Bluemix-Instance
      required: true
      type: string
    KeyId:
      description: The v4 UUID that uniquely identifies the key.
      in: path
      name: id
      required: true
      type: string
    LimitParam:
      default: 200
      description: "The number of keys to retrieve. By default, `GET /keys` returns\
        \ the first 200 keys. To retrieve a different set of keys, use `limit` with\
        \ `offset` to page through your available resources. The maximum value for\
        \ `limit` is 5000.\n  \n**Usage:** If you have 20 keys in your instance, and\
        \ you want to retrieve only the first 5 keys, use  `../keys?limit=5`."
      in: query
      maximum: 5000
      minimum: 1
      name: limit
      required: false
      type: integer
    OffsetParam:
      default: 0
      description: "The number of keys to skip. By specifying `offset`, you retrieve\
        \ a subset of keys that starts with the `offset` value. Use `offset` with\
        \ `limit` to page through your available resources.\n  \n**Usage:** If you\
        \ have 100 keys in your instance, and you want to retrieve keys 26 through\
        \ 50, use  `../keys?offset=25&limit=25`.    "
      in: query
      minimum: 0
      name: offset
      required: false
      type: integer
    Prefer:
      description: "Alters server behavior for POST or DELETE operations. A header\
        \ with `return=minimal` causes the service to  return only the key identifier,\
        \ or metadata. A header containing `return=representation` returns both the\
        \ key  material and metadata in the response entity-body. If the key has been\
        \ designated as a root key, the  system cannot return the key material.  \n\
        \  \n**Note:** During POST operations, Key Protect may not immediately return\
        \ the key material due to key generation time. To retrieve the key material,\
        \ you can perform a subsequent `GET /keys/{id}` request."
      enum:
      - return=representation
      - return=minimal
      in: header
      name: Prefer
      required: false
      type: string
  responses:
    Forbidden:
      description: Your IBM Cloud access token is not authorized to access this resource.
      examples:
        application/json:
          metadata:
            collectionTotal: 1
            collectionType: application/vnd.ibm.kms.error+json
          resources:
          - errorMsg: 'Forbidden: Your IBM Cloud access token is not authorized to
              access this resource.'
      schema:
        $ref: '#/definitions/ErrorCollection'
    Gone:
      description: The requested key was previously deleted and is no longer available.
        Please delete references to this key.
      examples:
        application/json:
          metadata:
            collectionTotal: 1
            collectionType: application/vnd.ibm.kms.error+json
          resources:
          - 'errorMsg: ''Gone: The requested key was previously deleted and is no
            longer available. Please delete  references to this key.'''
      schema:
        $ref: '#/definitions/ErrorCollection'
    InternalServerError:
      description: "IBM Key Protect is currently unavailable. Your request could not\
        \ be processed. Please try again later. \n    \nIf the problem persists, note\
        \ the `correlation-ID` in the response header and contact [IBM Cloud support](https://watson.service-now.com/wcp)."
      examples:
        application/json:
          metadata:
            collectionTotal: 1
            collectionType: application/vnd.ibm.kms.error+json
          resources:
          - 'errorMsg: ''Internal Server Error: IBM Key Protect is currently unavailable.
            Your request could not be  processed. Please try again later.'''
      schema:
        $ref: '#/definitions/ErrorCollection'
    NotFound:
      description: The key could not be found.
      examples:
        application/json:
          metadata:
            collectionTotal: 1
            collectionType: application/vnd.ibm.kms.error+json
          resources:
          - errorMsg: 'Not Found: They key could not be found.'
      schema:
        $ref: '#/definitions/ErrorCollection'
    TooManyRequests:
      description: Too many requests. Please wait a few minutes and try again.
      examples:
        application/json:
          metadata:
            collectionTotal: 1
            collectionType: application/vnd.ibm.kms.error+json
          resources:
          - errorMsg: 'Too Many Requests: Please wait a few minutes and try again.'
      schema:
        $ref: '#/definitions/ErrorCollection'
    Unauthorized:
      description: Your credentials are invalid or do not have the necessary permissions
        to make this request. Verify that the  given IBM Cloud access token and instance
        ID are correct. If the error persists, contact the account owner to check
        your permissions.
      examples:
        application/json:
          metadata:
            collectionTotal: 1
            collectionType: application/vnd.ibm.kms.error+json
          resources:
          - 'errorMsg: ''Unauthorized: Your credentials are invalid or do not have
            the necessary permissions to make this request. Verify that the given
            IBM Cloud access token and instance ID are correct. If the error  persists,
            contact the account owner to check your permissions.'''
      schema:
        $ref: '#/definitions/ErrorCollection'
  examples:
    CreatePolicy:
      value:
        metadata:
          collectionTotal: 1
          collectionType: application/vnd.ibm.kms.policy+json
        resources:
        - rotation: 1
          type: application/vnd.ibm.kms.policy+json
    CreateRootKey:
      value:
        metadata:
          collectionTotal: 1
          collectionType: application/vnd.ibm.kms.key+json
        resources:
        - description: '...'
          extractable: false
          name: Root-key
          type: application/vnd.ibm.kms.key+json
    ImportRootKey:
      value:
        metadata:
          collectionTotal: 1
          collectionType: application/vnd.ibm.kms.key+json
        resources:
        - description: '...'
          extractable: false
          name: Imported-root-key
          payload: '...'
          type: application/vnd.ibm.kms.key+json
    ImportRootKeyWithImportToken:
      value:
        metadata:
          collectionTotal: 1
          collectionType: application/vnd.ibm.kms.key+json
        resources:
        - description: '...'
          encryptedNonce: '...'
          encryptionAlgorithm: ' '
          extractable: false
          iv: '...'
          name: Encrypted-root-key
          payload: '...'
          type: application/vnd.ibm.kms.key+json
    RewrapKey:
      value:
        aad:
        - <additional_data>
        - <additional_data>
        ciphertext: <encrypted_data_key>
    RotateKey:
      value:
        payload: <new_data_key>
    UnwrapKey:
      value:
        aad:
        - <additional_data>
        - <additional_data>
        ciphertext: <encrypted_data_key>
    UpdatePolicy:
      value:
        metadata:
          collectionTotal: 1
          collectionType: application/vnd.ibm.kms.policy+json
        resources:
        - rotation: 2
          type: application/vnd.ibm.kms.policy+json
    WrapKey:
      value:
        aad:
        - <additional_data>
        - <additional_data>
        plaintext: <data_key>
  requestBodies:
    CreateImportTokenBody:
      content:
        application/vnd.ibm.kms.import_token+json:
          schema:
            $ref: '#/definitions/ImportToken'
      description: The base request for creating an import token.
      required: true
    CreateKeyBody:
      description: The base request for creating a new key.
      in: body
      name: body
      required: true
      schema: {}
    CreatePolicyBody:
      content:
        application/vnd.ibm.kms.key+json:
          schema:
            $ref: '#/definitions/CreatePolicy'
      description: The base request for creating a new policy associated with a key.
      required: true
    KeyActionBody:
      description: The base request for key actions.
      in: body
      name: body
      required: true
      schema: {}
