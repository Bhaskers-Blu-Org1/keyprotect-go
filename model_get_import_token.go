/*
 * IBM Key Protect API
 *
 * IBM Key Protect helps you provision encrypted keys for apps across IBM Cloud. As you manage the lifecycle of your keys, you can benefit from knowing that your keys are secured by cloud-based FIPS 140-2 Level 3 hardware security modules (HSMs) that protect against theft of information. You can use the Key Protect API to store, generate, and retrieve your key material. Keys within the service can protect any type of data in your symmetric key based encryption solution.
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package keyprotect
import (
	"time"
	"os"
)
// GetImportToken The base schema for retrieving an import token.
type GetImportToken struct {
	// The date the import token was created. The date format follows RFC 3339.
	CreationDate time.Time `json:"creationDate,omitempty"`
	// The time in seconds from the creation of an import token that determines how long its associated public key  remains valid.     The minimum value is `300` seconds (5 minutes), and the maximum value is `86400` (24 hours). The default value is `600` (10 minutes).
	Expiration float32 `json:"expiration,omitempty"`
	// The date the import token expires. The date format follows RFC 3339.
	ExpirationDate time.Time `json:"expirationDate,omitempty"`
	// The number of times that an import token can be retrieved within its expiration time before it is no longer accessible. 
	MaxAllowedRetrievals float32 `json:"maxAllowedRetrievals,omitempty"`
	// The number of retrievals that are available for the import token before it is no longer accessible.  
	RemainingRetrievals float32 `json:"remainingRetrievals,omitempty"`
	// The nonce value that is used to verify a key import request. Encrypt and provide the encrypted nonce value when you use `POST /keys` to securely import a key to the service.
	Nonce *os.File `json:"nonce,omitempty"`
	// The public encryption key that you can use to encrypt key material before you import it into the service.     This value is a PEM-encoded public key in PKIX format. Because PEM encoding is a binary format, the value is base64 encoded.
	Payload *os.File `json:"payload,omitempty"`
}
